<Application x:Class="PaperLess_Emeeting.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ReadPageModule"
             xmlns:properties="clr-namespace:PaperLess_Emeeting.Properties"
             xmlns:plugin="clr-namespace:PaperLess_Emeeting_Plugin"
             StartupUri="Login.xaml"
             Startup="Application_Startup"
             DispatcherUnhandledException="Application_DispatcherUnhandledException" 
             SessionEnding="Application_SessionEnding"
             Exit="Application_Exit">
    <Application.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="Resources" ObjectType="{x:Type local:CulturesHelper}"
					MethodName="GetResourceInstance"></ObjectDataProvider>
            <ObjectDataProvider x:Key="CultureResourcesDS" ObjectType="{x:Type local:CulturesHelper}" />

            <Style  TargetType="{x:Type ComboBox}">

                <!--<ComboBox>
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>-->
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
               
            </Style>

            <Style  TargetType="{x:Type ListBox}">

                <!--<ListBox>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>-->
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel VirtualizationMode="Recycling" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Black"  />
            <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#dcf3bc" />
            <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
            <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                    <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="AgendaComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                                <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- End of ComboBox -->

            <Style x:Key="AgendaButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="1"/>
                <Style.BasedOn>
                    <Style TargetType="ButtonBase">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Background" Value="#dcf3bc"/>
                        <Setter Property="Padding" Value="3,1"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="MinHeight" Value="0"/>
                        <Setter Property="Foreground" Value="#525a46"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ButtonBase">
                                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--Trigger Property="IsPressed" Value="True">
                                        <Setter Property="RenderTransform" >
                                            <Setter.Value>
                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger-->
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.3"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.BasedOn>
            </Style>
            <!-- End of Button -->

            <Style  TargetType="{x:Type TextBlock}">
                <!--Setter Property="SnapsToDevicePixels" Value="True"/-->
                <!--Setter Property="TextOptions.TextFormattingMode" Value="Display" /-->
                <!--Setter Property="TextOptions.TextRenderingMode" Value="ClearType" /-->
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <!--Setter Property="Foreground" Value="Red"/-->
            </Style>
            <!-- End of TextBlock -->

            <Style x:Key="myScrollViewerStyle1" TargetType="{x:Type ScrollViewer}">
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- End of ScrollViewer -->

            <Style x:Key="myScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Opacity" Value="0" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- End of ScrollBar -->

            <Style x:Key="myScrollViewerStyle2" TargetType="{x:Type ScrollViewer}">
                <!--<Setter Property="plugin:TouchScrolling.IsEnabled" Value="True" />-->
                <Setter Property="PanningMode" Value="Both" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <!--<Setter Property="BorderThickness" Value="1"/>-->
                <Setter Property="BorderBrush" Value="Red">
                    <!--<Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>-->
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <!--<Border CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                <ScrollBar
                                    Style="{StaticResource myScrollBarStyle}"
                                    Name="PART_VerticalScrollBar"
                                    Grid.Column="1"
                                    Value="{TemplateBinding VerticalOffset}"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                <ScrollBar 
                                    Style="{StaticResource myScrollBarStyle}"
                                    Name="PART_HorizontalScrollBar"
                                    Orientation="Horizontal"
                                    Grid.Row="1"
                                    Value="{TemplateBinding HorizontalOffset}"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                            </Grid>
                            <!--</Border>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- End of ScrollViewer -->

            <Style TargetType="TextBox">
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>

            <Style TargetType="Label">
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>

            <Style TargetType="Image">
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="ImageDownUp">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform
                    ScaleX="1"
                    ScaleY="1" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Image.PreviewMouseLeftButtonDown">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleX"
                                From="1"
                                To=".9"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleY"
                                From="1"
                                To=".9"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="Image.PreviewMouseLeftButtonUp">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleX"
                                From=".9"
                                To="1"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleY"
                                From=".9"
                                To="1"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Canvas}" x:Key="CanvasDownUp">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform
                    ScaleX="1"
                    ScaleY="1" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Canvas.PreviewMouseLeftButtonDown">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleX"
                                From="1"
                                To=".9"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleY"
                                From="1"
                                To=".9"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="Canvas.PreviewMouseLeftButtonUp">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleX"
                                From=".9"
                                To="1"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                Storyboard.TargetProperty="RenderTransform.ScaleY"
                                From=".9"
                                To="1"
                                Duration="0:0:0.1">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="RadioButton" x:Key="RadioButtonDownUp">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton" >
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_40">
                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="RenderTransform" TargetName="Content">
                                        <Setter.Value>
                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="ToggleButton">
                        <Style.BasedOn>
                            <Style TargetType="ButtonBase">
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="3,1"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ButtonBase">
                                            <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1.1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Style.BasedOn>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.BasedOn>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
