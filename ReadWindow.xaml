<Window x:Class="PaperLess_Emeeting.ReadWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:plugin="clr-namespace:PaperLess_Emeeting_Plugin"
        xmlns:local="clr-namespace:PaperLess_Emeeting"  WindowStyle="SingleBorderWindow" UseLayoutRounding="True"
        Title="ReadWindow" WindowState="Maximized" Height="350" Width="525" ResizeMode="CanResize"  Icon="images/64x64.ico"  >
    <!--ResizeMode="NoResize"-->
    <!--<Window.InputBindings>
        <KeyBinding Command="NavigationCommands.PreviousPage" Key="Right"/>
        <KeyBinding Command="NavigationCommands.NextPage" Key="Left"/>
    </Window.InputBindings>-->
    <Window.Resources>
        <local:thumbNailListBoxWidthHeightConverter x:Key="thumbNailListBoxConverter"/>
        <local:BooleanMediaDownloadStatusConverter x:Key="booleanMediaDownloadStatusConverter"/>
        <local:UriToCachedImageConverter x:Key="uriToCachedImageConverter"/>
        <Style x:Key="DocumentViewerStyle1" TargetType="DocumentViewer">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DocumentViewer">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Focusable="False">
                            <Grid Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentControl Grid.Column="0" Focusable="{TemplateBinding Focusable}" Grid.Row="0" Style="{DynamicResource ContentControlStyle1}" TabIndex="0"/>
                                <ScrollViewer x:Name="PART_ContentHost" CanContentScroll="true" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalScrollBarVisibility="Auto" IsTabStop="true" Grid.Row="1" TabIndex="1"/>
                                <DockPanel Grid.Row="1">
                                    <FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"/>
                                    <Image Height="10" Visibility="Visible" VerticalAlignment="top">
                                    </Image>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ContentControlStyle1" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <ToolBar Focusable="{TemplateBinding Focusable}" ToolBarTray.IsLocked="True" Language="en-us" KeyboardNavigation.TabNavigation="Continue" Uid="ToolBar_2">
                            <Button x:Name="PrintButton" Content="{Binding print, Source={StaticResource Resources}}" IsTabStop="True" Margin="2" Padding="2" ToolTipService.ShowOnDisabled="True" TabIndex="0" ToolTip="{Binding print, Source={StaticResource Resources}}" Uid="Button_14" VerticalAlignment="Center" Width="36" Click="PrintButton_Click"/>
                            <Button x:Name="CloseButton" Content="{Binding close, Source={StaticResource Resources}}" IsTabStop="True" Margin="2" Padding="2" ToolTipService.ShowOnDisabled="True" TabIndex="0" Uid="Button_14" VerticalAlignment="Center" Width="36" Click="CloseButton_Click"/>
                        </ToolBar>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlowDocumentReaderStyle1" TargetType="FlowDocumentReader">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="FlowDocumentReader">
                        <DockPanel Language="en-us" LastChildFill="True" Uid="DockPanel_3">
                            <Canvas x:Name="ToolBarSensor" Visibility="Collapsed" Background="Transparent"  DockPanel.Dock="Top" Panel.ZIndex="500" HorizontalAlignment="Stretch" Height="1" Width="{Binding ElementName=ToolBarInReader, Path=ActualWidth}"/>
                            <Grid Height="30" x:Name="PenMemoToolBar" DockPanel.Dock="Top" Panel.ZIndex="500" HorizontalAlignment="Stretch" Visibility="Collapsed">
                                <Grid.Background>
                                    <ImageBrush ImageSource="images/btn_orang_bg.png"/>
                                </Grid.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="29"/>
                                        <ColumnDefinition Width="29"/>
                                        <ColumnDefinition Width="29"/>
                                        <ColumnDefinition Width="29"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton Grid.Column="4" x:Name="BackToOriToolBar" ToolTip="{Binding backReadMode, Source={StaticResource Resources}}" Uid="RadioButton_2" Style="{DynamicResource RadioButtonStyle}" Click="PenMemoButton_Checked" HorizontalAlignment="Left">
                                        <RadioButton.Content>
                                            <Image Width="40" Height="40" SnapsToDevicePixels="True" Margin="-10">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Source" Value="images/ReadWindow/i_book.png" />
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </RadioButton.Content>
                                    </RadioButton>
                                </Grid>
                            </Grid>
                            <Grid Height="30" x:Name="ToolBarInReader"  DockPanel.Dock="Top" Panel.ZIndex="500" HorizontalAlignment="Stretch" Uid="Grid_31">
                                <Grid.Background>
                                    <ImageBrush ImageSource="images/ReadWindow/header_bg_bar.png"/>
                                </Grid.Background>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" HorizontalAlignment="Left" Uid="StackPanel_5" Panel.ZIndex="500">
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton x:Name="BackToBookShelfButton" ToolTip="{Binding backMyBookcase, Source={StaticResource Resources}}" Uid="RadioButton_1" Style="{DynamicResource RadioButtonStyle}" Click="BackToBookShelfButton_Click">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_backtobookShelf.png" />
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed" x:Name="FullScreenButton" ToolTip="{Binding fullScreen, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="FullScreenButton_Checked" IsChecked="False" Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_03.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=FullScreenButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_03_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed" GroupName="ViewingMode" x:Name="PageViewButton" IsEnabled="{TemplateBinding IsPageViewEnabled}" ToolTip="{Binding onePageMode, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="PageViewButton_Checked" IsChecked="False" Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_02.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=PageViewButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_02_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed" x:Name="TwoPageViewButton" GroupName="ViewingMode" IsEnabled="{TemplateBinding IsTwoPageViewEnabled}" ToolTip="{Binding twoPageMode, Source={StaticResource Resources}}" Uid="RadioButton_2" IsChecked="True"  Style="{DynamicResource RadioButtonStyle}" Click="TwoPageViewButton_Checked">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_01.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=TwoPageViewButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_01_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                    </StackPanel>
                                </Grid>
                                <StackPanel TextElement.FontFamily="Arial Unicode MS, Arial" TextElement.FontWeight="Bold" TextElement.FontSize="13" TextElement.Foreground="#ffffff" x:Name="PageCountAndButtons" Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal" Uid="StackPanel_3" VerticalAlignment="Center">
                                    <TextBlock HorizontalAlignment="Center" Uid="TextBlock_8" VerticalAlignment="Center">
                                        <InlineUIContainer>
											<TextBlock Visibility="Hidden" Text="{Binding PageNumber, RelativeSource={RelativeSource TemplatedParent}, NotifyOnTargetUpdated=True}" Uid="TextBlock_9" TargetUpdated="TextBlock_TargetUpdated_1" />
										</InlineUIContainer>
                                        <InlineUIContainer>
											<TextBlock x:Name="CurPageInReader"/>
										</InlineUIContainer>
                                        <Run Text=" "/><Run Text="/"/><Run Text=" "/>
                                        <InlineUIContainer>
											<TextBlock x:Name="TotalPageInReader"/>
										</InlineUIContainer>
                                        <InlineUIContainer>
											<TextBlock Visibility="Hidden" Text="{Binding PageCount, RelativeSource={RelativeSource TemplatedParent}}" Uid="TextBlock_10"/>
										</InlineUIContainer>
                                        </TextBlock>
                                </StackPanel>
                                <Grid Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="-5,-5,5,-5" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel x:Name="MediasStackPanel" Grid.Column="0"  Orientation="Horizontal" Uid="StackPanel_4" Margin="-5">
                                        <RadioButton IsChecked="False" x:Name="FullTextButton" Visibility="Collapsed" ToolTip="{Binding fullText, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="FullTextButton_Checked"  Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Background>
                                                <ImageBrush ImageSource="images/ReadWindow/header_bg_bar.png"/>
                                            </RadioButton.Background>
                                            <RadioButton.Content>
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Text="全"/>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton IsChecked="False" Visibility="Collapsed" x:Name="PrintButton" ToolTip="{Binding printThisPage, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="PrintButton_Checked" Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_13.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=PrintButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_13_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed"  IsChecked="False" x:Name="MediaListButton" ToolTip="{Binding multimediaList, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="MediaListButton_Checked" Style="{DynamicResource RadioButtonStyle}" >
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_05.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=MediaListButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_05_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed" IsChecked="False" x:Name="ShowAllImageButton" ToolTip="{Binding thumbnailOverview, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="ShowAllImageButton_Checked"  Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_06.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=ShowAllImageButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_06_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed" IsChecked="False" x:Name="ContentButton" ToolTip="{Binding skipContentPage, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="ContentButton_Checked" Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_10.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=ContentButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_10_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton IsChecked="False" x:Name="TocButton" Visibility="Collapsed" ToolTip="{Binding contents, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="TocButton_Checked"  Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_08.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=TocButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_08_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton Visibility="Collapsed" IsChecked="False" x:Name="SettingsButton" ToolTip="{Binding preferences, Source={StaticResource Resources}}" Click="SettingsButton_Checked">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_16.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=SettingsButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_16_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>

                                        <RadioButton IsChecked="False" x:Name="btnJoin" Click="btnJoin_Click"  Style="{DynamicResource RadioButtonStyle}" >
                                            <RadioButton.Content>
                                                <Image x:Name="imgJoin"  Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="image/ebTool-inCloud2@2x.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=ShareButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="image/ebTool-inCloud2@2x.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <ComboBox Height="22"   x:Name="cbBooks" Width="200"  ToolTip="{Binding SelectedItem.Key, RelativeSource={RelativeSource Self}}"/>

                                        <RadioButton IsChecked="False" x:Name="SearchButton" ToolTip="{Binding fullTextSearch, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="SearchButton_Checked" HorizontalAlignment="Left" Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_09.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=SearchButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_09_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>

                                        <RadioButton IsChecked="False" x:Name="PenMemoButton" ToolTip="{Binding hightlighter, Source={StaticResource Resources}}" Style="{DynamicResource RadioButtonStyle}" Click="PenMemoButton_Checked">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_15.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=PenMemoButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_15_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton GroupName="BookMarkMode" IsChecked="False" x:Name="BookMarkButton" ToolTip="{Binding bookMarks, Source={StaticResource Resources}}" Click="BookMarkButton_Checked"  Style="{DynamicResource RadioButtonStyle}">
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_04.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=BookMarkButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_04_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton GroupName="NoteMode" IsChecked="False" x:Name="NoteButton" ToolTip="{Binding note, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="NoteButton_Checked" Style="{DynamicResource RadioButtonStyle}" >
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_11.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=NoteButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_11_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                        <RadioButton IsChecked="False" x:Name="ShareButton" ToolTip="{Binding share, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="ShareButton_Checked" Style="{DynamicResource RadioButtonStyle}" >
                                            <RadioButton.Content>
                                                <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="images/ReadWindow/btn_12.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=ShareButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Image.Source" Value="images/ReadWindow/btn_12_over.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </RadioButton.Content>
                                        </RadioButton>
                                      
                                    </StackPanel>
                                    <RepeatButton Margin="10,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" ToolTip="{Binding zoomOut, Source={StaticResource Resources}}" Uid="RepeatButton_11" Width="{TemplateBinding FontSize}" Click="RepeatButton_Click_1" x:Name="zoomOutBtn">
                                        <RepeatButton.Content>
                                            <Image Width="13" Height="13" SnapsToDevicePixels="True">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Source" Value="images/ReadWindow/-.png" />
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </RepeatButton.Content>
                                        <RepeatButton.Style>
                                            <Style TargetType="RepeatButton">
                                                <Setter Property="Padding" Value="0,0,0,0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RepeatButton">
                                                            <Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_41">
                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.BasedOn>
                                                    <Style TargetType="RepeatButton">
                                                        <Setter Property="Padding" Value="5"/>
                                                        <Setter Property="Delay" Value="1000"/>
                                                        <Setter Property="Interval" Value="250"/>
                                                        <Style.BasedOn>
                                                            <Style TargetType="ButtonBase">
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Opacity" Value="1"/>
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Padding" Value="3,1"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="MinWidth" Value="0"/>
                                                                <Setter Property="MinHeight" Value="0"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="ButtonBase">
                                                                            <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform ScaleY="1.3" ScaleX="1.3"/>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.3"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                    <Slider x:Name="SliderInReader" Grid.Column="2" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" Maximum="3" Minimum="1" TickFrequency="0.25" Uid="Slider_3" VerticalAlignment="Center" Width="100" ValueChanged="SliderInReader_ValueChanged">
                                        <Slider.Style>
                                            <Style TargetType="Slider">
                                                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="BorderBrush" Value="#00000000"/>
                                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Setter Property="IsSnapToTickEnabled" Value="True"/>
                                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                                <Setter Property="MinWidth" Value="50"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="Width" Value="Auto"/>
                                                <Setter Property="Padding" Value="2,0"/>
                                                <Setter Property="Height" Value="Auto"/>
                                                <Setter Property="Opacity" Value="0.75"/>
                                                <Setter Property="Delay" Value="1000"/>
                                                <Setter Property="Interval" Value="250"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Slider">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}" Uid="Border_45">
                                                                <Grid ClipToBounds="False" Uid="Grid_22">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Uid="TickBar_1" Visibility="Collapsed"/>
                                                                    <Border Background="White" CornerRadius="2" Height="4" Opacity="0.5" Grid.Row="1" Uid="Border_46"/>
                                                                    <Canvas Height="4" Grid.Row="1" Uid="Canvas_7" VerticalAlignment="Center">
                                                                        <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Top="1" Uid="Rectangle_17" Visibility="Hidden"/>
                                                                    </Canvas>
                                                                    <Track x:Name="PART_Track" Grid.Row="1" Uid="PART_Track">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="Slider.DecreaseLarge" Uid="RepeatButton_1">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="RepeatButton">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="RepeatButton">
                                                                                                    <Border Background="Transparent" Uid="Border_43"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="Slider.IncreaseLarge" Uid="RepeatButton_2">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="RepeatButton">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="RepeatButton">
                                                                                                    <Border Background="Transparent" Uid="Border_43"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb Background="{TemplateBinding Background}" Uid="Thumb_5">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="Thumb">
                                                                                        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Cursor" Value="Hand"/>
                                                                                        <Setter Property="Padding" Value="6"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="Thumb">
                                                                                                    <Border Background="Transparent" Margin="-2" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_44">
                                                                                                        <Image Width="8" Height="15" Margin="0,2,0,0" SnapsToDevicePixels="True">
                                                                                                            <Image.Style>
                                                                                                                <Style TargetType="Image">
                                                                                                                    <Setter Property="Source" Value="images/ReadWindow/bar.png" />
                                                                                                                </Style>
                                                                                                            </Image.Style>
                                                                                                        </Image>
                                                                                                    </Border>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Uid="TickBar_2" Visibility="Collapsed"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="TickPlacement" Value="TopLeft">
                                                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                                </Trigger>
                                                                <Trigger Property="TickPlacement" Value="BottomRight">
                                                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                                </Trigger>
                                                                <Trigger Property="TickPlacement" Value="Both">
                                                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                                </Trigger>
                                                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" Value="1"/>
                                                                    <Setter Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.3"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Slider.Style>
                                    </Slider>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="3" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" ToolTip="{Binding zoomIn, Source={StaticResource Resources}}" Uid="RepeatButton_12" Width="{TemplateBinding FontSize}" Click="RepeatButton_Click_2"  x:Name="zoomInBtn">
                                        <RepeatButton.Content>
                                            <Image Width="13" Height="13" SnapsToDevicePixels="True">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Source" Value="images/ReadWindow/+.png" />
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </RepeatButton.Content>
                                        <RepeatButton.Style>
                                            <Style TargetType="RepeatButton">
                                                <Setter Property="Padding" Value="0,0,0,0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RepeatButton">
                                                            <Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_41">
                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.BasedOn>
                                                    <Style TargetType="RepeatButton">
                                                        <Setter Property="Padding" Value="5"/>
                                                        <Setter Property="Delay" Value="1000"/>
                                                        <Setter Property="Interval" Value="250"/>
                                                        <Style.BasedOn>
                                                            <Style TargetType="ButtonBase">
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Opacity" Value="1"/>
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Padding" Value="3,1"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="MinWidth" Value="0"/>
                                                                <Setter Property="MinHeight" Value="0"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="ButtonBase">
                                                                            <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform ScaleY="1.3" ScaleX="1.3"/>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.3"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="1"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Grid>
                                <Grid Grid.Column="3" HorizontalAlignment="Right" Uid="Grid_32" VerticalAlignment="Center">
                                    <ToggleButton x:Name="syncButton" Grid.Column="4" Click="syncButton_Click">
                                        <ToggleButton.Content>
                                            <Image Width="27" Height="24" SnapsToDevicePixels="True">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Source" Value="images/ReadWindow/screenSync_Off.png" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=syncButton, Path=IsChecked}" Value="True">
                                                                <Setter Property="Image.Source" Value="images/ReadWindow/screenSync_ON.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </ToggleButton.Content>
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="#FF000000"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_41">
                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <!--<Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="False">
                                                                <Setter Property="Opacity" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Opacity" Value="1"/>
                                                            </Trigger>
                                                        </Style.Triggers>-->
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Image x:Name="diableImg" Visibility="Collapsed" Width="27" Height="24" Grid.Column="4" SnapsToDevicePixels="True" Source="images/ReadWindow/screenSync_Off_Disable.png"/>
                                </Grid>
                                <Canvas Panel.ZIndex="200" Visibility="Collapsed" Background="Transparent" x:Name="toolbarSyncCanvas" Grid.ColumnSpan="3"/>
                            </Grid>
                            <Grid Uid="Grid_33">
                                <Canvas Panel.ZIndex="12" Visibility="Collapsed" x:Name="MediaTableCanvas" Width="{Binding ElementName=mainGrid, Path=ActualWidth}" Height="{Binding ElementName=mainGrid, Path=ActualHeight}" Background="Transparent" MouseLeftButtonDown="MediaTableCanvas_MouseLeftButtonDown"  >
                                    <Border Panel.ZIndex="13" CornerRadius="6" BorderBrush="Gray" Background="LightGray" BorderThickness="2" Padding="8" Canvas.Top="10" Canvas.Right="30" x:Name="mediaListBorder">
                                        <StackPanel Panel.ZIndex="13" x:Name="mediaListPanel" Background="White" Width="350" Height="400" />
                                    </Border>
                                </Canvas>
                                <Canvas x:Name="stageCanvas" plugin:TouchCanvas.IsEnabled="True"  Panel.ZIndex="3"  Background="Transparent" RenderTransformOrigin="0.5, 0.5"  MouseLeftButtonDown="ImageInReader_MouseLeftButtonDown"></Canvas>
                                <InkCanvas  x:Name="penMemoCanvas" Background="Transparent" EditingMode="None"  Panel.ZIndex="2" RenderTransformOrigin="0.5, 0.5"/>
                                <Canvas Panel.ZIndex="899" Visibility="Collapsed" x:Name="PopupControlCanvas" Width="{Binding ElementName=mainGrid, Path=ActualWidth}" Height="{Binding ElementName=mainGrid, Path=ActualHeight}" Background="LightGray" MouseLeftButtonDown="PopupControlCanvas_MouseLeftButtonDown" Opacity="0.1"/>
                                <Canvas Panel.ZIndex="800" Visibility="Collapsed" x:Name="HiddenControlCanvas" Width="{Binding ElementName=mainGrid, Path=ActualWidth}" Height="{Binding ElementName=mainGrid, Path=ActualHeight}" Background="#212020"/>
                                <Canvas x:Name="watermarkCanvas"  Panel.ZIndex="2" Background="Transparent" RenderTransformOrigin="0.5, 0.5"  >
                                    <Grid Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}">
                                        <TextBlock Opacity="0.5"  HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="watermarkTextBlock" Foreground="Black" TextElement.FontWeight="Bold" RenderTransformOrigin="0.5,0.5" TextElement.FontSize="60"/>
                                    </Grid>
                                </Canvas>
                                <Canvas x:Name="zoomCanvasFront" Panel.ZIndex="2" Visibility="Collapsed" Background="Black" RenderTransformOrigin="0.5, 0.5"></Canvas>
                                <Canvas x:Name="zoomCanvas"    Panel.ZIndex="1" Background="#212020" RenderTransformOrigin="0.5, 0.5"></Canvas>
                                <Border x:Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.IsTabStop="False" Margin="{TemplateBinding Padding}" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" Uid="Border_59" Background="#212020" />
                                <!--<RadioButton x:Name="leftPageButton" Panel.ZIndex="10"  Command="NavigationCommands.PreviousPage" IsEnabled="{TemplateBinding CanGoToPreviousPage}" ToolTip="{Binding leftPage, Source={StaticResource Resources}}" VerticalAlignment="Center" HorizontalAlignment="Left" Click="LastNext_Click">-->
                                <RadioButton x:Name="leftPageButton" Panel.ZIndex="10"  Command="NavigationCommands.PreviousPage" IsEnabled="{TemplateBinding CanGoToPreviousPage}" ToolTip="{Binding leftPage, Source={StaticResource Resources}}" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <RadioButton.Content>
                                        <Image Height="44" Width="44" Source="images/ReadWindow/arrow_left_epub.png" SnapsToDevicePixels="True"/>
                                    </RadioButton.Content>
                                </RadioButton>
                                <RadioButton x:Name="rightPageButton" Panel.ZIndex="10"  Command="NavigationCommands.NextPage" IsEnabled="{TemplateBinding CanGoToNextPage}" ToolTip="{Binding rightPage, Source={StaticResource Resources}}" VerticalAlignment="Center" HorizontalAlignment="Right" >
                                <!--<RadioButton x:Name="rightPageButton" Panel.ZIndex="10"  Command="NavigationCommands.NextPage" IsEnabled="{TemplateBinding CanGoToNextPage}" ToolTip="{Binding rightPage, Source={StaticResource Resources}}" VerticalAlignment="Center" HorizontalAlignment="Right" Click="LastNext_Click">-->
                                    <RadioButton.Content>
                                        <Image Height="44" Width="44" Source="images/ReadWindow/arrow_right_epub.png" SnapsToDevicePixels="True"/>
                                    </RadioButton.Content>
                                </RadioButton>

                                <!--<StackPanel Orientation="Horizontal"  Panel.ZIndex="10" Margin="10"  HorizontalAlignment="Right" VerticalAlignment="Top">-->
                                    <StackPanel Orientation="Horizontal"  Panel.ZIndex="1000" Margin="10"  HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Image x:Name="statusBMK"  Visibility="Collapsed" Source="images/status-withBookmark@2x.png"  Panel.ZIndex="10" SnapsToDevicePixels="True" Width="56" Height="56"
                                            HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="1" Margin="0,0,0,0"/>

                                    <Image x:Name="statusMemo" Visibility="Collapsed" Source="images/status-withMemo@2x.png"  Panel.ZIndex="10" SnapsToDevicePixels="True" Width="56" Height="56"
                                            HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="1" Margin="-10,0,10,0"/>

                                    <Image Visibility="Collapsed" x:Name="StatusOnairOff" Panel.ZIndex="10" SnapsToDevicePixels="True" Width="80" Height="80"
                                            HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="1">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/status-onair-off@2x.png" />
                                                <!--<Style.Triggers>
                                                    <EventTrigger RoutedEvent="Image.Loaded">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard Storyboard.TargetProperty="Opacity">
                                                                    <DoubleAnimation From="0" To="1" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Style.Triggers>-->
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Image Visibility="Collapsed" x:Name="screenBroadcasting" Panel.ZIndex="10" SnapsToDevicePixels="True" Width="80" Height="80"
                                            HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="1">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/status-onair-chairman@2x.png" />
                                                <!--<Style.Triggers>
                                                <EventTrigger RoutedEvent="Image.Loaded">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>-->
                                                <!--Storyboard Storyboard.TargetProperty="Opacity"-->
                                                <!--<Storyboard Storyboard.TargetProperty="">
                                                                <DoubleAnimation From="0" To="1" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </Style.Triggers>-->
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Image Visibility="Collapsed" x:Name="screenReceiving" Panel.ZIndex="10" SnapsToDevicePixels="True" Width="80" Height="80"
                                            HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="1">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/status-onair-audience@2x.png" />
                                                <!--<Style.Triggers>
                                                <EventTrigger RoutedEvent="Image.Loaded">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>-->
                                                <!--Storyboard Storyboard.TargetProperty="Opacity"-->
                                                <!--<Storyboard Storyboard.TargetProperty="">
                                                                    <DoubleAnimation From="0" To="1" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </Style.Triggers>-->
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </StackPanel>
                                <Canvas Panel.ZIndex="200" Visibility="Collapsed" Background="Transparent" x:Name="syncCanvas" Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}"/>
                            </Grid>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VisibleIfNotDownloaded" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding isDownloaded, Mode=TwoWay, NotifyOnSourceUpdated=True}" Value="False">
                    <Setter Property="Background" Value="#4C000000" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListBoxStyle" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="1" CornerRadius="2">
                            <!--<ScrollViewer Style="{StaticResource myScrollViewerStyle2}"   x:Name="SVInLV" Width="{Binding ElementName=mainGrid, Path=ActualWidth, Converter={StaticResource thumbNailListBoxConverter}, ConverterParameter=30} or 105">-->
                            <ScrollViewer Style="{StaticResource myScrollViewerStyle2}" x:Name="SVInLV" Width="{Binding ElementName=mainGrid, Path=ActualWidth, Converter={StaticResource thumbNailListBoxConverter}, ConverterParameter=30}">
                                <WrapPanel x:Name="wrapPanel" IsItemsHost="True" Orientation="Horizontal" Margin="10"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid Margin="5">
                                <Border BorderBrush="#fefefe" BorderThickness="3">
                                    <Image x:Name="imageInListBox" Source="{Binding Path=leftImagePath, Converter={StaticResource uriToCachedImageConverter}}" Stretch="Uniform"/>
                                </Border>
                                <Border Style="{StaticResource VisibleIfNotDownloaded}"  />
                            </Grid>
                            <Grid>
                                <Border Background="#4C000000"  VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="30" Height="20" >
                                    <TextBlock Text="{Binding pageIndex}" FontSize="14" VerticalAlignment="Center"  HorizontalAlignment="Center" Foreground="#FFFFFF" FontWeight="Bold"/>
                                </Border>
                                <!--<Image Source="{Binding Path=rightImagePath}" Stretch="Uniform"/>-->
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Height" Value="120"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <!--<Setter Property="Margin" Value="0,10,0,0"/>-->
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SearchListBoxStyle" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox" >
                        <Border Name="Border">
                            <StackPanel Orientation="Vertical">
                                <ScrollViewer Focusable="false" ScrollViewer.VerticalScrollBarVisibility="Auto"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Width="350" Height="370">
                                    <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#E4E0E1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="5">
                            <StackPanel Orientation="Horizontal" Height="100">
                                <Border BorderBrush="#DFDFDF" BorderThickness="2">
                                    <Image Source="{Binding Path=imagePath}" Stretch="Uniform" />
                                </Border>
                                <Grid Margin="13,12,30,10">
                                    <TextBlock Text="{Binding targetLine}"  LineHeight="20" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Top"  FontSize="14" Foreground="#212121" TextWrapping="WrapWithOverflow" Width="230"/>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" TextElement.FontSize="13" TextElement.Foreground="#444444">
                                        <TextBlock Text="{Binding the, Source={StaticResource Resources}}"/>
                                        <TextBlock Text="{Binding showedPage}"/>
                                        <TextBlock Text="{Binding page, Source={StaticResource Resources}}"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="MediaListBoxHeaderTemplateStyle">
            <Border x:Name="grid">
                <ContentPresenter>
                    <ContentPresenter.Content>
                        <Grid TextElement.FontFamily="微軟正黑體" TextElement.FontSize="15" TextElement.FontWeight="Bold">
                            <TextBlock Text="{TemplateBinding Content}"/>
                        </Grid>
                    </ContentPresenter.Content>
                </ContentPresenter>
            </Border>
        </DataTemplate>
        <Style x:Key="MediaListBoxStyle" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox" >
                        <Border Name="Border">
                            <StackPanel Orientation="Vertical">
                                <ScrollViewer Focusable="false" ScrollViewer.VerticalScrollBarVisibility="Auto"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Width="340" Height="370">
                                    <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#E4E0E1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid Margin="5" TextElement.FontFamily="微軟正黑體">
                            <StackPanel Orientation="Horizontal" Height="100">
                                <RadioButton x:Name="ButtonInMediaList" Uid="{Binding pageId}" Tag="{Binding mediaSourcePath}" Background="Transparent" Click="ButtonInMediaList_Click">
                                    <RadioButton.Content>
                                        <Grid Margin="5">
                                            <StackPanel Orientation="Vertical">
                                                <Border BorderBrush="#DFDFDF" BorderThickness="2" HorizontalAlignment="Stretch">
                                                    <Image Width="50" Source="{Binding Path=pagePath}" Stretch="Uniform" />
                                                </Border>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextElement.Foreground="#444444" TextElement.FontSize="13">
                                                    <TextBlock Text="{Binding the, Source={StaticResource Resources}}"/>
                                                    <TextBlock Text="{Binding pageId}"/>
                                                    <TextBlock Text="{Binding page, Source={StaticResource Resources}}"/>
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                    </RadioButton.Content>
                                </RadioButton>
                                <Grid Margin="13,12,30,10">
                                    <TextBlock Text="{Binding mediaName}" VerticalAlignment="Top"  FontSize="14" Foreground="#212121" TextWrapping="WrapWithOverflow" Width="230"/>
                                    <TextBlock Text="{Binding downloadStatus, Mode=TwoWay, NotifyOnSourceUpdated=True, Converter={StaticResource booleanMediaDownloadStatusConverter}}" VerticalAlignment="Bottom" TextElement.FontSize="13" TextElement.Foreground="#444444"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ShareListBoxStyle" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox" >
                        <Border Name="Border"  BorderBrush="#DCDCDC" BorderThickness="2">
                            <StackPanel Orientation="Vertical">
                                <ScrollViewer Focusable="false" ScrollViewer.VerticalScrollBarVisibility="Auto"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Width="340" Height="370">
                                    <StackPanel IsItemsHost="True" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border BorderBrush="#E1E1E1" BorderThickness="1" Height="50" Width="120">
                            <Grid Background="#F5F5F5" TextElement.Foreground="#2E2E2E" TextElement.FontSize="14" TextElement.FontFamily="Arial Unicode MS, Arial" TextElement.FontWeight="Bold">
                                <RadioButton x:Name="ButtonInShareList" Tag="{Binding sharePlatForm}" Click="sharePlatformButton_Click">
                                    <RadioButton.Content>
                                        <StackPanel Margin="6,4,6,4" Orientation="Horizontal">
                                            <Image Width="26" Height="26" Source="{Binding imagePath}" Stretch="Uniform" />
                                            <TextBlock Margin="6,9" Text="{Binding textShown}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton" >
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_40">
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                        <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="ToggleButton">
                    <Style.BasedOn>
                        <Style TargetType="ButtonBase">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Padding" Value="3,1"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ButtonBase">
                                        <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="RenderTransform" TargetName="Content">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="RenderTransform" TargetName="Content">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1.1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
        </Style>
        <Style x:Key="ContentTreeViewStyle" TargetType="TreeView">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="True"/>
                        <EventSetter Event="RequestBringIntoView" Handler="TreeViewItem_RequestBringIntoView"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TreeViewItem">
                                    <Grid Margin="13,10,0,0" TextElement.FontSize="14" TextElement.Foreground="#333333" TextElement.FontFamily="Arial Unicode MS, Arial"  >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto" MaxWidth="250"  MinWidth="30"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.Column="0" Width="9" Height="9" Margin="0,0,5,0" Source="images/ReadWindow/point.png"/>
                                        <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                            <ContentPresenter TextBlock.TextAlignment="Center" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter  TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Width" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Height" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AreaButtonStyle" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="Blue">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        RecognizesAccessKey="True"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <FlowDocumentReader Grid.Row="0" x:Name="FR" ScrollViewer.VerticalScrollBarVisibility="Disabled"  Style="{DynamicResource FlowDocumentReaderStyle1}" PreviewMouseWheel="FR_PreviewMouseWheel" PreviewKeyDown="FR_PreviewKeyDown"  />
        <ProgressBar x:Name="downloadProgBar"  Visibility="Collapsed"  VerticalAlignment="Bottom" Height="5" Width="{Binding ElementName=mainGrid, Path=ActualWidth}"/>


        <Grid x:Name="NewUITop" Opacity=".9"   Visibility="Collapsed"  Panel.ZIndex="201" HorizontalAlignment="Left"  VerticalAlignment="Bottom" >

            <!--畫筆粗細-->
            <StackPanel  x:Name="btnFuncSP" Height="0" Margin="128,0,0,64" HorizontalAlignment="Left"  VerticalAlignment="Bottom" >
                <Grid >
                    <Polygon   Points="0,0 64,0,64,192,40,192,32,200,24,192,0,192"  StrokeThickness="2" Stroke="White" Fill="Black" />
                    <StackPanel  x:Name="btnBoldSP" Width="64" Height="192" Background="Transparent" Margin="0,-8,0,0" MouseLeave="btnBoldSP_MouseLeave">
                        <Grid x:Name="btnThin"  Width="62"   Height="64" Margin="0"  Background="Transparent" MouseEnter="Grid_MouseEnterTransparent" MouseLeave="Grid_MouseLeaveTransparent" >
                            <!--<Grid.Style>
                                                <Style>
                                                    <Setter Property="Grid.Background" Value="Black"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Grid.IsMouseOver" Value="True">
                                                            <Setter Property="Grid.Background" Value="#F66F00" />
                                                        </Trigger>
                                                        <Trigger Property="Grid.IsMouseOver" Value="False">
                                                             <Setter Property="Grid.Background" Value="#000000" />
                                                        </Trigger>
                                            </Style.Triggers>
                                                </Style>
                                            </Grid.Style>-->
                            <RadioButton Click="btnThickness_Click" Tag="100">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/markers-size-thin@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                        <Grid x:Name="btnMedium"  Width="62"   Height="64" Margin="0"  Background="Transparent"  MouseEnter="Grid_MouseEnterTransparent" MouseLeave="Grid_MouseLeaveTransparent">
                            <!--<Grid.Style>
                                               <Style>
                                                    <Setter Property="Grid.Background" Value="Black"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Grid.IsMouseOver" Value="True">
                                                            <Setter Property="Grid.Background" Value="#F66F00" />
                                                        </Trigger>
                                                        <Trigger Property="Grid.IsMouseOver" Value="False">
                                                            <Setter Property="Grid.Background" Value="#000000" />
                                                        </Trigger>
                                                     </Style.Triggers>
                                                </Style>
                                            </Grid.Style>-->
                            <RadioButton Click="btnThickness_Click"  Tag="200">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/markers-size-medium@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                        <Grid x:Name="btnLarge" Width="62"   Height="64" Margin="0"  Background="Transparent"  MouseEnter="Grid_MouseEnterTransparent" MouseLeave="Grid_MouseLeaveTransparent">
                            <!--<Grid.Style>
                                                        <Style>
                                                            <Setter Property="Grid.Background" Value="Black"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="Grid.IsMouseOver" Value="True">
                                                                    <Setter Property="Grid.Background" Value="#F66F00" />
                                                                </Trigger>
                                                                <Trigger Property="Grid.IsMouseOver" Value="False">
                                                                    <Setter Property="Grid.Background" Value="#000000" />
                                                                </Trigger>
                                                    </Style.Triggers>
                                                        </Style>
                                                </Grid.Style>-->
                            <RadioButton Click="btnThickness_Click"  Tag="300">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/markers-size-bold@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                </Grid>
            </StackPanel>

            <!--畫筆顏色-->
            <StackPanel  x:Name="btnPenFuncSP" Height="0" Margin="32,0,0,64"  HorizontalAlignment="Left"  VerticalAlignment="Bottom"  MouseLeave="btnPenFuncSP_MouseLeave">
                <Grid >
                    <!--<Polygon   Points="0,0 128,0,128,320,72,320,64,328,56,320,0,320"  StrokeThickness="2" Stroke="White" Fill="Transparent" />-->
                    <Polygon   Points="0,0 136,0,136,310,80,310,68,318,56,310,0,310"  StrokeThickness="2" Stroke="White" Fill="Transparent" />
                    <StackPanel x:Name="PenColorSP" VerticalAlignment="Center" Margin="4,0,0,8" >
                        <StackPanel Orientation="Horizontal" >
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="1">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-red@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="2">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-red50@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="3">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-yellow@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="4">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-yellow50@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>

                            </Grid>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton  Click="btnPenColor_Click" Tag="5">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-green@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton  Click="btnPenColor_Click" Tag="6">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-green50@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="7">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-blue@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="8">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-blue50@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="9">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-purple@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                            <Grid Background="Black" Margin="1" MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave">
                                <RadioButton Click="btnPenColor_Click" Tag="10">
                                    <RadioButton.Content>
                                        <Image Width="56"   Height="56"   Source="images/markers-color-purple50@2x.png"   />
                                    </RadioButton.Content>
                                </RadioButton>
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </StackPanel>

        </Grid>

        <!--<Grid x:Name="NewUI"   Visibility="Collapsed"  Panel.ZIndex="100" HorizontalAlignment="Left"  VerticalAlignment="Bottom">-->
        <Grid x:Name="NewUI"   Visibility="Collapsed"  Panel.ZIndex="202" HorizontalAlignment="Left"  VerticalAlignment="Bottom">
            <StackPanel  Background="White" Opacity=".9" Height="60" Orientation="Horizontal">


                <!--畫筆-->
                <!--<Grid Width="64"   Height="64" MouseRightButtonDown="btnPen_MouseRightButtonDown">-->
                <Grid Width="64"   Height="64" >
                    <RadioButton x:Name="btnPen" Click="btnPen_Click" Tag="201">
                        <RadioButton.Content>
                            <Image Width="58"   Height="58"   Source="images/markersNow-red-medium@2x.png"   />
                        </RadioButton.Content>
                    </RadioButton>
                    <Image x:Name="PenSlideCtrl"  Width="8" Height="16" Margin="0,0,3,0" VerticalAlignment="Center"  HorizontalAlignment="Right" Source="images/slideCtrl-open@2x.png"   />
                </Grid>

                <!--畫筆工具列-->
                <StackPanel x:Name="PenSP" Height="64" Background="Black" Width="0"  Orientation="Horizontal">
                    <StackPanel >
                        <Grid Width="64"   Height="64">
                            <RadioButton x:Name="btnPenColor"  Tag="1" >
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/markers-color-red@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                            <Image  Width="8" Height="16" Margin="0,4,4,0" VerticalAlignment="Top"  HorizontalAlignment="Right"  Source="images/more@2x.png"   />
                        </Grid>
                    </StackPanel>
                    <Rectangle  Width="1" Height="64" Fill="White" />
                    <StackPanel>
                        <Grid Width="64"   Height="64">
                            <RadioButton x:Name="btnBold" Tag="200">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/markers-size-medium@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                            <Image  Width="8" Height="16" Margin="0,4,4,0" VerticalAlignment="Top" HorizontalAlignment="Right"   Source="images/more@2x.png"   />
                        </Grid>
                    </StackPanel>
                    <Rectangle  Width="1" Height="64" Fill="White" />
                    <StackPanel>
                        <Grid Width="64"   Height="64" x:Name="btnEraserGD" Background="Transparent">
                            <RadioButton x:Name="btnEraser" Click="btnEraser_Click">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/markers-eraser@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                </StackPanel>

                <!--設定-->
                <Grid Width="64"   Height="64">
                    <RadioButton Click="btnSetting_Click">
                        <RadioButton.Content>
                            <Image Width="58" Height="58"    Source="images/tools@2x.png"   />
                        </RadioButton.Content>
                    </RadioButton>
                    <Image x:Name="SettingSlideCtrl"  Width="8" Height="16" Margin="0,0,3,0" VerticalAlignment="Center"  HorizontalAlignment="Right" Source="images/slideCtrl-open@2x.png"   />
                </Grid>

                <!--設定工具列-->
                <StackPanel x:Name="SettingSP" Background="Black" Width="0" Orientation="Horizontal">
                    <StackPanel x:Name="BookMarkSP">
                        <Grid Width="61"   Height="64">
                            <RadioButton x:Name="btnBookMark"  Click="BookMarkButton_Checked">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/tool-bookmark@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                    <Rectangle  Width="1" Height="64" Fill="White" />
                    <StackPanel x:Name="MemoSP">
                        <Grid Width="64"   Height="64">
                            <RadioButton  x:Name="btnNoteButton"  Click="NoteButton_Checked">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/tool-memo@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                    <Rectangle  Width="1" Height="64" Fill="White" />
                    <StackPanel x:Name="SentMailSP">
                        <Grid Width="64"   Height="64" >
                            <RadioButton Click="ShareButton_Checked">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/tool-mailmemo@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                    <Rectangle  Width="1" Height="64" Fill="White" />
                    <StackPanel>
                        <Grid Width="64"   Height="64">
                            <RadioButton>
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/tool-note@2x.png"   />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                    <Rectangle  Width="1" Height="64" Fill="White" />
                    <StackPanel x:Name="ViewThumbSP">
                        <Grid Width="64"   Height="64">
                            <RadioButton x:Name="btnViewThumb" Click="ShowListBoxButtonNew_Click">
                                <RadioButton.Content>
                                    <Image Width="58"   Height="58"   Source="images/tool-viewThumb@2x.png"  />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                </StackPanel>

                <!--離開-->
                <Grid Width="64"   Height="64">
                    <RadioButton Click="BackToBookShelfButton_Click" >
                        <RadioButton.Content>
                            <Image  x:Name="btnClose" Width="58" Height="58"   Source="images/exitReader@2x.png"   />
                        </RadioButton.Content>
                    </RadioButton>
                </Grid>

            </StackPanel>
        </Grid>

        <!--<Canvas Visibility="Hidden"  x:Name="thumnailCanvas" Opacity="0.9" VerticalAlignment="Bottom" Height="150" Panel.ZIndex="200" 
                Grid.Column="0"  Background="#212020" TextElement.FontSize="12" TextElement.FontWeight="Bold" TextElement.Foreground="#bcbcbc" TextElement.FontFamily="Arial Unicode MS, Arial">-->
        <Canvas Visibility="Collapsed" x:Name="thumnailCanvas" Opacity="0.9" VerticalAlignment="Bottom" Height="150" Panel.ZIndex="200" 
                                       Grid.Column="0"  Background="#454545" TextElement.FontSize="12" TextElement.FontWeight="Bold" TextElement.Foreground="#bcbcbc" TextElement.FontFamily="新細明體">
            <StackPanel Orientation="Vertical">
                <StackPanel x:Name="SearchSP" Visibility="Collapsed"  Orientation="Horizontal"  Background="#202020" VerticalAlignment="Center" >
                    <StackPanel  Background="#151515" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <Image Source="Images/thumb-search@2x.png" Width="20" Height="20" Margin="5"/>
                        <Grid  Margin="5">
                            <TextBox x:Name="txtKeyword"  TextAlignment="Left" CaretBrush="White"  Background="TransParent" Foreground ="White"  BorderThickness="0"  FontSize="16" Width="265" Height="25" Margin="0,3,23,0">
                                <!--<TextBox.CaretBrush>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="Blue" Offset="0" />
                                                            <GradientStop Color="Red" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </TextBox.CaretBrush>-->
                            </TextBox>
                            <RadioButton x:Name="btnTxtKeywordClear"  Visibility="Collapsed"  HorizontalAlignment="Right">
                                <RadioButton.Content>
                                    <Image Source="images/thumb-search-clear@2x.png" Width="20" Height="20"  />
                                </RadioButton.Content>
                            </RadioButton>
                        </Grid>
                    </StackPanel>
                    <TextBlock x:Name="txtFilterCount"    Margin="5,5,5,5"  Foreground ="White"  VerticalAlignment="Center"  Background="TransParent"  FontSize="16" />
                </StackPanel>

                <!--<StackPanel x:Name="thumbNailCanvasStackPanel" Orientation="Horizontal">-->
                <StackPanel x:Name="thumbNailCanvasStackPanel" Orientation="Horizontal"  HorizontalAlignment="Center" VerticalAlignment="Center"  Height="150"   >
                    <Grid x:Name="thumbNailCanvasGrid" HorizontalAlignment="Center">
                        <StackPanel x:Name="RadioButtonStackPanel" Orientation="Vertical" >
                            <RadioButton GroupName="ListBoxGroup" Margin="0, 5,0,0" IsChecked="True" x:Name="AllImageButtonInListBox" ToolTip="{Binding showAllThumbnails, Source={StaticResource Resources}}" Click="AllImageButtonInListBox_Checked">
                                <RadioButton.Content>
                                    <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/ReadWindow/btn_full_over.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=AllImageButtonInListBox, Path=IsChecked}" Value="False">
                                                        <Setter Property="Image.Source" Value="images/ReadWindow/btn_full.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </RadioButton.Content>
                            </RadioButton>

                            <StackPanel MouseLeftButtonDown="AllImageButtonInListBoxSP_MouseLeftButtonDown"  Height="50" x:Name="AllImageButtonInListBoxSP"  Visibility="Collapsed" Orientation="Horizontal">
                                <RadioButton GroupName="ListBoxGroup"  Margin="0,3,0,0" IsChecked="False" x:Name="AllImageButtonInListBoxNew" ToolTip="{Binding showAnnotation, Source={StaticResource Resources}}" Click="AllImageButtonInListBox_Checked">
                                    <RadioButton.Content>
                                        <Image Width="32" Height="32" SnapsToDevicePixels="True">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Stretch" Value="Uniform" />
                                                    <Setter Property="Source" Value="images/tool-viewThumb@2x.png" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=AllImageButtonInListBoxNew, Path=IsChecked}" Value="True">
                                                            <Setter Property="Image.Source" Value="images/tool-viewThumb@2x.png" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </RadioButton.Content>
                                </RadioButton>
                                <TextBlock Text="全部" FontSize="16"  Foreground ="White" Margin="0,15,3,0" FontFamily="新細明體"/>
                            </StackPanel>

                            <RadioButton GroupName="ListBoxGroup" Margin="0, 5,0,0" IsChecked="False" x:Name="BookMarkButtonInListBox" ToolTip="{Binding showBookmarks, Source={StaticResource Resources}}" Click="BookMarkButtonInListBox_Checked">
                                <RadioButton.Content>
                                    <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/ReadWindow/btn_bookmark.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=BookMarkButtonInListBox, Path=IsChecked}" Value="True">
                                                        <Setter Property="Image.Source" Value="images/ReadWindow/btn_bookmark_over.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </RadioButton.Content>
                            </RadioButton>

                            <Rectangle x:Name="Rect1" Visibility="Collapsed" Margin="0"  Height="1" Fill="White" />
                            <StackPanel MouseLeftButtonDown="BookMarkButtonInListBoxSP_MouseLeftButtonDown" Height="50"  x:Name="BookMarkButtonInListBoxSP"  Visibility="Collapsed" Orientation="Horizontal">
                                <RadioButton GroupName="ListBoxGroup"   Margin="0,3,0,0" IsChecked="False" x:Name="BookMarkButtonInListBoxNew" ToolTip="{Binding showAnnotation, Source={StaticResource Resources}}" Click="BookMarkButtonInListBox_Checked">
                                    <RadioButton.Content>
                                        <Image Width="32" Height="32" SnapsToDevicePixels="True">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Stretch" Value="Uniform" />
                                                    <Setter Property="Source" Value="images/tool-bookmark@2x.png" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=BookMarkButtonInListBoxNew, Path=IsChecked}" Value="True">
                                                            <Setter Property="Image.Source" Value="images/tool-bookmark@2x.png" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </RadioButton.Content>
                                </RadioButton>
                                <TextBlock Text="有書籤" FontSize="16"  Foreground ="White" Margin="0,15,3,0" FontFamily="新細明體"/>
                            </StackPanel>
                            <RadioButton GroupName="ListBoxGroup" Margin="0, 5,0,0" IsChecked="False" x:Name="NoteButtonInListBox" ToolTip="{Binding showAnnotation, Source={StaticResource Resources}}" Click="NoteButtonInListBox_Checked">
                                <RadioButton.Content>
                                    <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/ReadWindow/btn_note.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=NoteButtonInListBox, Path=IsChecked}" Value="True">
                                                        <Setter Property="Image.Source" Value="images/ReadWindow/btn_note_over.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </RadioButton.Content>
                            </RadioButton>
                            <Rectangle x:Name="Rect2" Visibility="Collapsed" Margin="0"  Height="1" Fill="White" />
                            <StackPanel MouseLeftButtonDown="NoteButtonInListBoxSP_MouseLeftButtonDown" Height="50"  x:Name="NoteButtonInListBoxSP"  Visibility="Collapsed" Orientation="Horizontal">
                                <RadioButton GroupName="ListBoxGroup"   Margin="0,3,0,0" IsChecked="False" x:Name="NoteButtonInListBoxNew" ToolTip="{Binding showAnnotation, Source={StaticResource Resources}}" Click="NoteButtonInListBox_Checked">
                                    <RadioButton.Content>
                                        <Image Width="32" Height="32" SnapsToDevicePixels="True">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Stretch" Value="Uniform" />
                                                    <Setter Property="Source" Value="images/tool-memo@2x.png" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=NoteButtonInListBoxNew, Path=IsChecked}" Value="True">
                                                            <Setter Property="Image.Source" Value="images/tool-memo@2x.png" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </RadioButton.Content>
                                </RadioButton>
                                <TextBlock Text="有便利貼" FontSize="16"  Foreground ="White" Margin="0,15,3,0" FontFamily="新細明體"/>
                            </StackPanel>
                            <RadioButton GroupName="ListBoxGroup" Margin="0, 5,0,0" x:Name="HideListBoxButton" ToolTip="{Binding hideThumbnails, Source={StaticResource Resources}}" Click="HideListBoxButton_Checked">
                                <RadioButton.Content>
                                    <Image Width="24" Height="24" SnapsToDevicePixels="True">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="images/ReadWindow/btn_hide.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=HideListBoxButton, Path=ToolTip}" Value="關閉縮圖總覽">
                                                        <Setter Property="Image.Source" Value="images/ReadWindow/btn_close.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </RadioButton.Content>
                            </RadioButton>
                        </StackPanel>
                    </Grid>
                    <Grid x:Name="thumbNailListBoxGD">
                        <ListBox ScrollViewer.IsDeferredScrollingEnabled="False" VirtualizingStackPanel.VirtualizationMode="Recycling"  VirtualizingStackPanel.IsVirtualizing="True" x:Name="thumbNailListBox"   SelectionChanged="thumbNailListBox_SelectionChanged" Height="150" Style="{DynamicResource ListBoxStyle}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </Canvas>

        <!--<Grid Visibility="Collapsed">-->
            <RadioButton GroupName="ShowListBoxMode" x:Name="ShowListBoxButton" ToolTip="{Binding showThumbnails, Source={StaticResource Resources}}" HorizontalAlignment="Left" Margin="15, 0, 0, 15" VerticalAlignment="Bottom" Click="ShowListBoxButton_Click">
                <RadioButton.Content>
                    <Image Width="24" Height="24" Source="images/ReadWindow/btn_14.png" SnapsToDevicePixels="True"/>
                </RadioButton.Content>
            </RadioButton>
            <RadioButton GroupName="LockMode" IsChecked="False" Width="0"  x:Name="LockButton" Visibility="Collapsed"  Margin="0, 0, 15, 15" HorizontalAlignment="Right" VerticalAlignment="Bottom" ToolTip="{Binding locklock, Source={StaticResource Resources}}" Uid="RadioButton_1" Click="LockButton_Checked" >
                <RadioButton.Content>
                    <Image Width="24" Height="24" SnapsToDevicePixels="True">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="images/ReadWindow/btn_07.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=LockButton, Path=IsChecked}" Value="True">
                                        <Setter Property="Image.Source" Value="images/ReadWindow/btn_07_over.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </RadioButton.Content>
            </RadioButton>
            <DocumentViewer Visibility="Collapsed" x:Name="DV" Style="{DynamicResource DocumentViewerStyle1}"/>
        <!--</Grid>-->

        <!--<Grid x:Name="NewPop" Background="Red"  Visibility="Collapsed"  Panel.ZIndex="205" Margin="64"  HorizontalAlignment="Left"  VerticalAlignment="Bottom">
            <Canvas Visibility="Collapsed" x:Name="MediaTableCanvas2"  >
                <Border  CornerRadius="6" BorderBrush="Gray" Background="LightGray" BorderThickness="2" Padding="8" Canvas.Top="10" Canvas.Right="30" x:Name="mediaListBorder2">
                    <StackPanel  x:Name="mediaListPanel2" Background="White" Width="350" Height="400" />
                </Border>
            </Canvas>
        </Grid>-->
        
    </Grid>
</Window>